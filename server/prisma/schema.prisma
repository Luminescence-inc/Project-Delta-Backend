// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  uuid              String             @id @default(dbgenerated("gen_random_uuid()")) @map("uuid") @db.Uuid
  email             String             @unique @map("email")
  firstName         String             @map("first_name")
  lastName          String             @map("last_name")
  password          String             @map("password")
  role              Role               @default(CUSTOMER) @map("role")
  verified          Boolean            @default(false) @map("verified")
  createdUtc        DateTime           @default(now()) @map("created_utc") @db.Timestamp(6)
  modifiedUtc       DateTime           @default(now()) @map("modified_utc") @db.Timestamp(6)
  token             String[]           @map("token")
  user_verification user_verification[]
  business_profiles business_profiles[]

  //email -idx
  //uuid -idx
}

model user_verification {
  uuid         String           @id @default(dbgenerated("gen_random_uuid()")) @map("uuid") @db.Uuid
  uniqueString String           @unique @map("unique_string")
  user         user?            @relation(fields: [useruuid], references: [uuid])
  type         VerificationType @map("type")
  useruuid     String           @map("user_uuid") @db.Uuid
  createdUtc   DateTime         @map("created_utc") @db.Timestamp(6)
  expiresUtc   DateTime         @map("expires_utc") @db.Timestamp(6)

  // useruuid -idx
  // uniqueString -idx
  // type -idx
}

model business_profiles {
  uuid                    String                @id @default(dbgenerated("gen_random_uuid()")) @map("uuid") @db.Uuid
  userUuid                String                @map("user_uuid") @db.Uuid
  user                    user?                 @relation(fields: [userUuid], references: [uuid])
  name                    String?                @map("name")
  description             String?                @map("description")
  businessCategoryUuid    String?                @map("business_category_uuid") @db.Uuid
  businessCategory        business_categories?  @relation(fields: [businessCategoryUuid], references: [uuid])
  country                 String?                @map("country")
  stateAndProvince        String?                @map("state_and_province")
  city                    String?                @map("city")
  street                  String?                @map("street")
  postalCode              String?                @map("postal_code")
  logoUrl                 String?                @map("logo_url")
  phoneNumber             String?                @map("phone_number")
  businessEmail           String?                @map("business_email")
  openTime                String?                @map("open_time")
  closeTime               String?                @map("close_time")
  daysOfOperation         String[]              @map("days_of_operation")
  websiteUrl              String?                @map("website_url")
  linkedinUrl             String?                @map("linkedin_url")
  instagramUrl            String?                @map("instagram_url")
  twitterUrl              String?                @map("twitter_url")
  facebookUrl             String?                @map("facebook_url")
  createdUtc              DateTime              @default(now()) @map("created_utc") @db.Timestamp(6)
  modifiedUtc             DateTime              @default(now()) @map("modified_utc") @db.Timestamp(6)

  //userUuid -idx
  //businessCategoryUuid -idx
  //country -idx
  //stateAndProvince -idx
  //city -idx
  //uuid -idx
}

model business_categories {
  uuid              String               @id @default(dbgenerated("gen_random_uuid()")) @map("uuid") @db.Uuid
  description       String               @map("description")
  createdUtc        DateTime             @default(now()) @map("created_utc") @db.Timestamp(6)
  modifiedUtc       DateTime             @default(now()) @map("modified_utc") @db.Timestamp(6)
  business_profiles business_profiles[]
}

enum Role {
  CUSTOMER
  BUSINESS
}

enum VerificationType {
  EMAIL
  PASSWORD
}